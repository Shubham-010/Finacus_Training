{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shubham\\\\Desktop\\\\Finacus_Training\\\\React\\\\Revise\\\\01-starting-project\\\\src\\\\components\\\\Users.js\";\nimport { Component } from 'react';\nimport User from './User';\nimport classes from './Users.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showUsers: true,\n      moreState: 'Test'\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.users.length === 0) {\n      throw new Error('No users provided!');\n    }\n  }\n\n  toggleUsersHandler() {\n    this.setState(curState => {\n      return {\n        showUsers: !curState.showUsers\n      };\n    });\n  }\n\n  render() {\n    const usersList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.props.users.map(user => /*#__PURE__*/_jsxDEV(User, {\n        name: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.users,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleUsersHandler.bind(this),\n        children: [this.state.showUsers ? 'Hide' : 'Show', \" Users\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), this.state.showUsers && usersList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n// };\n\n\nexport default Users;","map":{"version":3,"sources":["C:/Users/Shubham/Desktop/Finacus_Training/React/Revise/01-starting-project/src/components/Users.js"],"names":["Component","User","classes","Users","constructor","state","showUsers","moreState","componentDidUpdate","props","users","length","Error","toggleUsersHandler","setState","curState","render","usersList","map","user","name","id","bind"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;;;AAIA,MAAMC,KAAN,SAAoBH,SAApB,CAA6B;AAC3BI,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,SAAS,EAAC,IADD;AAETC,MAAAA,SAAS,EAAC;AAFD,KAAX;AAKD;;AAGDC,EAAAA,kBAAkB,GAAE;AAClB,QAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,KAA4B,CAA/B,EAAiC;AAC/B,YAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AACD;AACF;;AAEDC,EAAAA,kBAAkB,GAAE;AAClB,SAAKC,QAAL,CAAeC,QAAD,IAAY;AACxB,aAAO;AAACT,QAAAA,SAAS,EAAE,CAACS,QAAQ,CAACT;AAAtB,OAAP;AACD,KAFD;AAGD;;AACDU,EAAAA,MAAM,GAAG;AAEP,UAAMC,SAAS,gBACb;AAAA,gBACG,KAAKR,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAsBC,IAAD,iBACpB,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA,IAAI,CAACC;AAA/B,SAAWD,IAAI,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;;AAQA,wBACE;AAAK,MAAA,SAAS,EAAEnB,OAAO,CAACQ,KAAxB;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,KAAKG,kBAAL,CAAwBS,IAAxB,CAA6B,IAA7B,CAAjB;AAAA,mBACG,KAAKjB,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC,MADnC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIG,KAAKD,KAAL,CAAWC,SAAX,IAAwBW,SAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAxC0B,C,CA2C7B;AACA;AAEA;AACA;AACA;AAIA;;;AAEA,eAAed,KAAf","sourcesContent":["import { Component } from 'react';\nimport User from './User';\n\nimport classes from './Users.module.css';\n\n\n\nclass Users extends Component{\n  constructor(){\n    super();\n    this.state={\n      showUsers:true,\n      moreState:'Test',\n\n    };\n  }\n\n\n  componentDidUpdate(){\n    if(this.props.users.length === 0){\n      throw new Error('No users provided!');\n    }\n  }\n\n  toggleUsersHandler(){\n    this.setState((curState)=>{\n      return {showUsers: !curState.showUsers};\n    })\n  }\n  render() {\n\n    const usersList = (\n      <ul>\n        {this.props.users.map((user) => (\n          <User key={user.id} name={user.name} />\n        ))}\n      </ul>\n    );\n  \n    return (\n      <div className={classes.users}>\n        <button onClick={this.toggleUsersHandler.bind(this)}>\n          {this.state.showUsers ? 'Hide' : 'Show'} Users\n        </button>\n        {this.state.showUsers && usersList}\n      </div>\n    );\n  }\n}\n\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n  \n  \n// };\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}