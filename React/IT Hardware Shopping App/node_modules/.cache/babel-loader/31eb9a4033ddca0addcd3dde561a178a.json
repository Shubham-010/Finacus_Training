{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shubham\\\\Desktop\\\\Finacus_Training\\\\React\\\\IT Hardware Shopping App\\\\src\\\\components\\\\Hardware\\\\AvailableHardW.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport classes from \"./AvailableHardW.module.css\";\nimport Card from \"../UI/Card\";\nimport HardwareItem from \"./HardwareItem/HardwareItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableHardW = () => {\n  _s();\n\n  const [hardwares, sethardware] = useState([]);\n  const [isloading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(undefined);\n  useEffect(() => {\n    const fetchHardware = async () => {\n      const response = await fetch('https://http-react1-default-rtdb.firebaseio.com/hardware.json');\n\n      if (!response.ok) {\n        throw new Error('something went Wrong!!');\n      }\n\n      const responseData = await response.json();\n      const loadedharware = [];\n\n      for (const key in responseData) {\n        loadedharware.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      sethardware(loadedharware);\n      setIsLoading(false);\n    };\n\n    try {\n      fetchHardware();\n    } catch (error) {\n      setIsLoading(false);\n      setHttpError(error.message);\n    }\n  }, []);\n\n  if (isloading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.HardwareLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.HardwareLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this);\n  }\n\n  const HardwareList = hardwares.map(hardware => /*#__PURE__*/_jsxDEV(HardwareItem, {\n    id: hardware.id,\n    name: hardware.name,\n    description: hardware.description,\n    price: hardware.price\n  }, hardware.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.hardware,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: HardwareList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}; // const PseudoData = [\n//   {\n//     id: \"hw1\",\n//     name: \"Desktop\",\n//     description: \"Hp Desktops\",\n//     price: 45000,\n//   },\n//   {\n//     id: \"hw2\",\n//     name: \"Keyboard\",\n//     description: \"Acer Keyboards\",\n//     price: 45000,\n//   },\n//   {\n//     id: \"hw3\",\n//     name: \"Mouse\",\n//     description: \"Hp Mouse\",\n//     price: 45000,\n//   },\n// ];\n\n\n_s(AvailableHardW, \"1Eq9OincYChEwzYALfpTnieLwbg=\");\n\n_c = AvailableHardW;\nexport default AvailableHardW;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableHardW\");","map":{"version":3,"sources":["C:/Users/Shubham/Desktop/Finacus_Training/React/IT Hardware Shopping App/src/components/Hardware/AvailableHardW.js"],"names":["useEffect","useState","classes","Card","HardwareItem","AvailableHardW","hardwares","sethardware","isloading","setIsLoading","httpError","setHttpError","undefined","fetchHardware","response","fetch","ok","Error","responseData","json","loadedharware","key","push","id","name","description","price","error","message","HardwareLoading","HardwareList","map","hardware"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport classes from \"./AvailableHardW.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport HardwareItem from \"./HardwareItem/HardwareItem\";\r\n\r\nconst AvailableHardW = () => {\r\n\r\nconst[hardwares, sethardware]=useState([]);\r\nconst[isloading, setIsLoading]=useState(true);\r\nconst[httpError, setHttpError]=useState(undefined);\r\n\r\n\r\nuseEffect(()=>{\r\n  const fetchHardware = async() =>{\r\n  const response= await fetch('https://http-react1-default-rtdb.firebaseio.com/hardware.json');\r\n  if(!response.ok){\r\n    throw new Error ('something went Wrong!!');\r\n  }  \r\n  \r\n  const responseData = await response.json();\r\n\r\n    const loadedharware = [];\r\n    for(const key in responseData){\r\n      loadedharware.push({\r\n        id:key,\r\n        name: responseData[key].name,\r\n        description: responseData[key].description,\r\n        price: responseData[key].price,\r\n      });\r\n    }\r\nsethardware(loadedharware);\r\nsetIsLoading(false);\r\n}\r\ntry{\r\nfetchHardware();\r\n}catch(error){\r\n  setIsLoading(false);\r\n  setHttpError(error.message);\r\n}\r\n},[])\r\n\r\n if(isloading){\r\n   return(\r\n     <section className={classes.HardwareLoading}>\r\n   <p>Loading....</p></section>\r\n   );}\r\n   if(httpError){ return(\r\n    <section className={classes.HardwareLoading}>\r\n  <p>{httpError}</p></section>\r\n  );\r\n\r\n   }\r\n\r\n  const HardwareList = hardwares.map((hardware) => (\r\n    <HardwareItem\r\n        id={hardware.id}\r\n      key={hardware.id}\r\n      name={hardware.name}\r\n      description={hardware.description}\r\n      price={hardware.price}\r\n    />\r\n  ));\r\n  return (\r\n    <section className={classes.hardware}>\r\n      <Card>\r\n        <ul>{HardwareList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n// const PseudoData = [\r\n//   {\r\n//     id: \"hw1\",\r\n//     name: \"Desktop\",\r\n//     description: \"Hp Desktops\",\r\n//     price: 45000,\r\n//   },\r\n//   {\r\n//     id: \"hw2\",\r\n//     name: \"Keyboard\",\r\n//     description: \"Acer Keyboards\",\r\n//     price: 45000,\r\n//   },\r\n//   {\r\n//     id: \"hw3\",\r\n//     name: \"Mouse\",\r\n//     description: \"Hp Mouse\",\r\n//     price: 45000,\r\n//   },\r\n// ];\r\nexport default AvailableHardW;\r\n"]},"metadata":{},"sourceType":"module"}