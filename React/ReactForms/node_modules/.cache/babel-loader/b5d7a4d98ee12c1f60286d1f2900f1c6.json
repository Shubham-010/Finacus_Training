{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shubham\\\\Desktop\\\\Finacus_Training\\\\React\\\\ReactForms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Uinput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: NameValidahe,\n    NameInvalidhe: nameInputHasError,\n    nameInputChangeHandler: nameChangeHandler,\n    nameDaalNhitarBlur: nameBurHandler,\n    reset: resetNameInput\n  } = Uinput(value => value.trim() !== \"\");\n  const [enteredEmail, setEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const EmailValidahe = enteredEmail.includes('@');\n  const EmailInvalidahe = !EmailValidahe && enteredEmailTouched;\n  let FormValid = false;\n\n  if (NameValidahe && EmailValidahe) {\n    FormValid = true;\n  }\n\n  const emailInputChangeHandler = event => {\n    setEmail(event.target.value);\n  };\n\n  const emailDaalNhitarBlur = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!NameValidahe && !EmailValidahe) {\n      return;\n    }\n\n    resetNameInput();\n    setEmail('');\n    setFormlaTouchkele(false);\n    setEnteredEmailTouched(false);\n  };\n\n  const CheckKarAndCSSBadal = NameInvalidhe ? \"form-control  invalid\" : \"form-control\";\n  const CheckKarAndCSSBadal1 = EmailInvalidahe ? \"form-control  invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: CheckKarAndCSSBadal,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Kuch to Daal Name me!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: CheckKarAndCSSBadal1,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailDaalNhitarBlur,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), EmailInvalidahe && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Kuch to Daal Email me!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !FormValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"SNq7apvavvUxWSLrRRLsgwsodfA=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/Shubham/Desktop/Finacus_Training/React/ReactForms/src/components/SimpleInput.js"],"names":["useState","Uinput","SimpleInput","props","value","enteredName","isValid","NameValidahe","NameInvalidhe","nameInputHasError","nameInputChangeHandler","nameChangeHandler","nameDaalNhitarBlur","nameBurHandler","reset","resetNameInput","trim","enteredEmail","setEmail","enteredEmailTouched","setEnteredEmailTouched","EmailValidahe","includes","EmailInvalidahe","FormValid","emailInputChangeHandler","event","target","emailDaalNhitarBlur","formSubmissionHandler","preventDefault","setFormlaTouchkele","CheckKarAndCSSBadal","CheckKarAndCSSBadal1"],"mappings":"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","sourcesContent":["import {   useState } from \"react\";\nimport Uinput from '../hooks/use-input';\n\n\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: NameValidahe, \n    NameInvalidhe: nameInputHasError,\n    nameInputChangeHandler: nameChangeHandler,\n    nameDaalNhitarBlur: nameBurHandler,\n    reset: resetNameInput,\n  } = Uinput((value) => value.trim() !== \"\");\n \n\n  const [enteredEmail, setEmail]= useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n \n  const EmailValidahe = enteredEmail.includes('@');\n  const EmailInvalidahe = !EmailValidahe && enteredEmailTouched;\n  let FormValid = false;\n    if(NameValidahe && EmailValidahe){\n      FormValid=true;\n    } \n\n\n  const emailInputChangeHandler = (event) => {\n    setEmail(event.target.value);\n\n  };\n\n  const emailDaalNhitarBlur = event =>{\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    \n\n    if(!NameValidahe && !EmailValidahe){\n      return;\n    }\n    resetNameInput();\n    setEmail('');\n    setFormlaTouchkele(false);\n    setEnteredEmailTouched(false);\n  };\n\n  \n\n  const CheckKarAndCSSBadal =  NameInvalidhe\n    ? \"form-control  invalid\"\n    : \"form-control\"; \n\n  const CheckKarAndCSSBadal1 = EmailInvalidahe\n  ? \"form-control  invalid\"\n  : \"form-control\"; \n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={CheckKarAndCSSBadal}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameChangeHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && <p className=\"error-text\">Kuch to Daal Name me!!</p>}\n      </div>\n      <div className={CheckKarAndCSSBadal1}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailInputChangeHandler}\n          onBlur={emailDaalNhitarBlur}\n          value={enteredEmail}\n        />\n        {EmailInvalidahe && <p className=\"error-text\">Kuch to Daal Email me!!</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!FormValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}