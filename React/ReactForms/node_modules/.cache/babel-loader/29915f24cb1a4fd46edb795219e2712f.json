{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst Uinput = validateValue => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [FormlaTouchkele, setFormlaTouchkele] = useState(false);\n  const NameValidahe = validateValue(enteredName);\n  const NameInvalidhe = !NameValidahe && FormlaTouchkele;\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameDaalNhitarBlur = event => {\n    setFormlaTouchkele(true);\n  };\n\n  return {\n    value: enteredName,\n    NameInvalidhe: NameInvalidhe,\n    nameInputChangeHandler,\n    nameDaalNhitarBlur\n  };\n};\n\n_s(Uinput, \"pvm9gTXkDCjUM+RVOXYn85KwHCw=\");\n\n_c = Uinput;\nexport default Uinput;\n\nvar _c;\n\n$RefreshReg$(_c, \"Uinput\");","map":{"version":3,"sources":["C:/Users/Shubham/Desktop/Finacus_Training/React/ReactForms/src/hooks/use-input.js"],"names":["React","useState","Uinput","validateValue","enteredName","setEnteredName","FormlaTouchkele","setFormlaTouchkele","NameValidahe","NameInvalidhe","nameInputChangeHandler","event","target","value","nameDaalNhitarBlur"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AAEA,MAAMC,MAAM,GAAEC,aAAD,IAAiB;AAAA;;AAC1B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAsCN,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAMO,YAAY,GAAGL,aAAa,CAACC,WAAD,CAAlC;AACF,QAAMK,aAAa,GAAG,CAACD,YAAD,IAAiBF,eAAvC;;AAEA,QAAMI,sBAAsB,GAAIC,KAAD,IAAW;AACxCN,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AAED,GAHD;;AAIA,QAAMC,kBAAkB,GAAGH,KAAK,IAAG;AACjCJ,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACF,GAFA;;AAGF,SAAM;AACFM,IAAAA,KAAK,EAAET,WADL;AAEFK,IAAAA,aAAa,EAAEA,aAFb;AAE4BC,IAAAA,sBAF5B;AAEmDI,IAAAA;AAFnD,GAAN;AAKC,CAnBD;;GAAMZ,M;;KAAAA,M;AAoBN,eAAeA,MAAf","sourcesContent":["import React,{useState} from \"react\";\r\n\r\nconst Uinput=(validateValue)=>{\r\n    const [enteredName, setEnteredName] = useState(\"\");\r\n    const [FormlaTouchkele, setFormlaTouchkele]=useState(false);\r\n\r\n    const NameValidahe = validateValue(enteredName);\r\n  const NameInvalidhe = !NameValidahe && FormlaTouchkele;\r\n\r\n  const nameInputChangeHandler = (event) => {\r\n    setEnteredName(event.target.value);\r\n\r\n  };\r\n  const nameDaalNhitarBlur = event =>{\r\n    setFormlaTouchkele(true);\r\n };\r\nreturn{\r\n    value: enteredName,\r\n    NameInvalidhe: NameInvalidhe, nameInputChangeHandler,nameDaalNhitarBlur\r\n\r\n}\r\n};\r\nexport default Uinput;"]},"metadata":{},"sourceType":"module"}