{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shubham\\\\Desktop\\\\Finacus_Training\\\\React\\\\ReactForms\\\\src\\\\components\\\\SimpleInput.js\";\nimport Uinput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  const {\n    value: enteredName,\n    isValid: NameValidahe,\n    NameInvalidhe: nameInputHasError,\n    nameInputChangeHandler: nameChangeHandler,\n    nameDaalNhitarBlur: nameBlurHandler,\n    reset: resetNameInput\n  } = Uinput(value => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isValid: EmailValidahe,\n    EmailInValid: EmailInvalidahe,\n    emailInputChangeHandler: emailInputChangeHandler,\n    emailDaalNhitarBlur: emailBlurHandler,\n    reset: resetEmailInput\n  } = Uinput(value => value.includes('@'));\n  let FormValid = false;\n\n  if (NameValidahe && EmailValidahe) {\n    FormValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!NameValidahe && !EmailValidahe) {\n      return;\n    }\n\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const CheckKarAndCSSBadal = nameInputHasError ? \"form-control  invalid\" : \"form-control\";\n  const CheckKarAndCSSBadal1 = EmailInvalidahe ? \"form-control  invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: CheckKarAndCSSBadal,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Kuch to Daal Name me!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: CheckKarAndCSSBadal1,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), EmailInvalidahe && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Kuch to Daal Email me!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !FormValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/Shubham/Desktop/Finacus_Training/React/ReactForms/src/components/SimpleInput.js"],"names":["Uinput","SimpleInput","props","value","enteredName","isValid","NameValidahe","NameInvalidhe","nameInputHasError","nameInputChangeHandler","nameChangeHandler","nameDaalNhitarBlur","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","EmailValidahe","EmailInValid","EmailInvalidahe","emailInputChangeHandler","emailDaalNhitarBlur","emailBlurHandler","resetEmailInput","includes","FormValid","formSubmissionHandler","event","preventDefault","CheckKarAndCSSBadal","CheckKarAndCSSBadal1"],"mappings":";AACA,OAAOA,MAAP,MAAmB,oBAAnB;;;AAIA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM;AACJC,IAAAA,KAAK,EAAEC,WADH;AAEJC,IAAAA,OAAO,EAAEC,YAFL;AAGJC,IAAAA,aAAa,EAAEC,iBAHX;AAIJC,IAAAA,sBAAsB,EAAEC,iBAJpB;AAKJC,IAAAA,kBAAkB,EAAEC,eALhB;AAMJC,IAAAA,KAAK,EAAEC;AANH,MAOFd,MAAM,CAAEG,KAAD,IAAWA,KAAK,CAACY,IAAN,OAAiB,EAA7B,CAPV;AASA,QAAM;AACJZ,IAAAA,KAAK,EAAEa,YADH;AAEJX,IAAAA,OAAO,EAAEY,aAFL;AAGJC,IAAAA,YAAY,EAAEC,eAHV;AAIJC,IAAAA,uBAAuB,EAAEA,uBAJrB;AAKJC,IAAAA,mBAAmB,EAAEC,gBALjB;AAMJT,IAAAA,KAAK,EAAEU;AANH,MAOFvB,MAAM,CAAEG,KAAD,IAAUA,KAAK,CAACqB,QAAN,CAAe,GAAf,CAAX,CAPV;AAUA,MAAIC,SAAS,GAAG,KAAhB;;AACE,MAAGnB,YAAY,IAAIW,aAAnB,EAAiC;AAC/BQ,IAAAA,SAAS,GAAC,IAAV;AACD;;AAIH,QAAMC,qBAAqB,GAAIC,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACC,cAAN;;AAIA,QAAG,CAACtB,YAAD,IAAiB,CAACW,aAArB,EAAmC;AACjC;AACD;;AACDH,IAAAA,cAAc;AACdS,IAAAA,eAAe;AAChB,GAVD;;AAcA,QAAMM,mBAAmB,GAAIrB,iBAAiB,GAC1C,uBAD0C,GAE1C,cAFJ;AAIA,QAAMsB,oBAAoB,GAAEX,eAAe,GACzC,uBADyC,GAEzC,cAFF;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEO,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEG,mBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,QAAQ,EAAEnB,iBAHZ;AAIE,QAAA,MAAM,EAAEE,eAJV;AAKE,QAAA,KAAK,EAAER;AALT;AAAA;AAAA;AAAA;AAAA,cAFF,EASGI,iBAAiB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAEsB,oBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,QAAQ,EAAEV,uBAHZ;AAIE,QAAA,MAAM,EAAEE,gBAJV;AAKE,QAAA,KAAK,EAAEN;AALT;AAAA;AAAA;AAAA;AAAA,cAFF,EASGG,eAAe,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAuBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACM,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA9ED;;KAAMxB,W;AAgFN,eAAeA,WAAf","sourcesContent":["\nimport Uinput from '../hooks/use-input';\n\n\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: NameValidahe, \n    NameInvalidhe: nameInputHasError,\n    nameInputChangeHandler: nameChangeHandler,\n    nameDaalNhitarBlur: nameBlurHandler,\n    reset: resetNameInput,\n  } = Uinput((value) => value.trim() !== \"\");\n \n  const {\n    value: enteredEmail,\n    isValid: EmailValidahe,\n    EmailInValid: EmailInvalidahe,\n    emailInputChangeHandler: emailInputChangeHandler,\n    emailDaalNhitarBlur: emailBlurHandler,\n    reset: resetEmailInput,\n  } = Uinput((value)=> value.includes('@'));\n\n \n  let FormValid = false;\n    if(NameValidahe && EmailValidahe){\n      FormValid=true;\n    } \n\n\n  \n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    \n\n    if(!NameValidahe && !EmailValidahe){\n      return;\n    }\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  \n\n  const CheckKarAndCSSBadal =  nameInputHasError\n    ? \"form-control  invalid\"\n    : \"form-control\"; \n\n  const CheckKarAndCSSBadal1 =EmailInvalidahe\n  ? \"form-control  invalid\"\n  : \"form-control\"; \n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={CheckKarAndCSSBadal}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && <p className=\"error-text\">Kuch to Daal Name me!!</p>}\n      </div>\n      <div className={CheckKarAndCSSBadal1}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailInputChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {EmailInvalidahe && <p className=\"error-text\">Kuch to Daal Email me!!</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!FormValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}