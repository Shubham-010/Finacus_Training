{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shubham\\\\Desktop\\\\Finacus_Training\\\\React\\\\Day5(section 10)\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPwd] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n  useEffect(() => {\n    const identfier = setTimeout(() => {\n      console.log('Checking form Validity!');\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 500);\n    return () => {\n      console.log('CLEANUP!');\n      clearTimeout(identfier);\n    };\n  }, [emailState, passwordState]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setEnteredEmail(event.target.value);\n    //   setFormIsValid(\n    //     event.target.value.includes('@') > 6 && emailState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPwd({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); //   setFormIsValid(\n    //     emailState.value.trim().length > 6 && passwordState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPwd({\n      type: 'INPUT_BLUR'\n    }); // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        label: \"E-mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlue: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlue: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"GuFlIeZcH33A0FSpH2oA4NGNXAw=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Shubham/Desktop/Finacus_Training/React/Day5(section 10)/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","Input","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPwd","emailIsValid","passwordIsValid","console","log","identfier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","actions","btn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,EAAuCC,UAAvC,QAAyD,OAAzD;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAiC;AAC/B,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACG,GAAhB;AAAoBC,MAAAA,OAAO,EAAEJ,MAAM,CAACG,GAAP,CAAWE,QAAX,CAAoB,GAApB;AAA7B,KAAP;AAED;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAiC;AAC/B,WAAO;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAf;AAAqBE,MAAAA,OAAO,EAAEL,KAAK,CAACG,KAAN,CAAYG,QAAZ,CAAqB,GAArB;AAA9B,KAAP;AACD;;AACD,SAAO;AAACH,IAAAA,KAAK,EAAE,EAAR;AAAWE,IAAAA,OAAO,EAAC;AAAnB,GAAP;AACD,CATD;;AAWA,MAAME,eAAe,GAAG,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACzC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAiC;AAC/B,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACG,GAAhB;AAAoBC,MAAAA,OAAO,EAAEJ,MAAM,CAACG,GAAP,CAAWI,IAAX,GAAkBC,MAAlB,GAA2B;AAAxD,KAAP;AAED;;AACD,MAAIR,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAiC;AAC/B,WAAO;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAf;AAAqBE,MAAAA,OAAO,EAAEL,KAAK,CAACG,KAAN,CAAYK,IAAZ,GAAmBC,MAAnB,GAA4B;AAA1D,KAAP;AACD;;AACD,SAAO;AAACN,IAAAA,KAAK,EAAE,EAAR;AAAWE,IAAAA,OAAO,EAAC;AAAnB,GAAP;AACD,CATD;;AAWA,MAAMK,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB;AACA;AACA;AACA;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BrB,UAAU,CAACK,YAAD,EAAe;AAC3DI,IAAAA,KAAK,EAAE,EADoD;AAE3DE,IAAAA,OAAO,EAAE;AAFkD,GAAf,CAA9C;AAIA,QAAM,CAACW,aAAD,EAAgBC,WAAhB,IAA+BvB,UAAU,CAACa,eAAD,EAAiB;AAC9DJ,IAAAA,KAAK,EAAE,EADuD;AAE9DE,IAAAA,OAAO,EAAC;AAFsD,GAAjB,CAA/C;AAMA,QAAM;AAAEA,IAAAA,OAAO,EAAEa;AAAX,MAA2BJ,UAAjC;AACA,QAAM;AAACT,IAAAA,OAAO,EAAEc;AAAV,MAA6BH,aAAnC;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,WAAO,MAAM;AACXD,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQA5B,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAM6B,SAAS,GAAGC,UAAU,CAAC,MAAM;AACnCH,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAEFR,MAAAA,cAAc,CACZC,UAAU,CAACT,OAAX,IAAsBW,aAAa,CAACX,OADxB,CAAd;AAGD,KAN+B,EAM7B,GAN6B,CAA5B;AAOJ,WAAO,MAAM;AACXe,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAG,MAAAA,YAAY,CAACF,SAAD,CAAZ;AACD,KAHD;AAIC,GAZU,EAYR,CAAER,UAAF,EAAcE,aAAd,CAZQ,CAAT;;AAcA,QAAMS,kBAAkB,GAAIC,KAAD,IAAW;AACpCX,IAAAA,aAAa,CAAC;AAACb,MAAAA,IAAI,EAAE,YAAP;AAAqBE,MAAAA,GAAG,EAACsB,KAAK,CAACC,MAAN,CAAaxB;AAAtC,KAAD,CAAb,CADoC,CAEpC;AAEF;AACA;AAEC,GAPD;;AAYA,QAAMyB,qBAAqB,GAAIF,KAAD,IAAW;AACvCT,IAAAA,WAAW,CAAC;AAACf,MAAAA,IAAI,EAAE,YAAP;AAAqBE,MAAAA,GAAG,EAACsB,KAAK,CAACC,MAAN,CAAaxB;AAAtC,KAAD,CAAX,CADuC,CAGzC;AACA;AAEC,GAND;;AAQA,QAAM0B,oBAAoB,GAAG,MAAM;AACjC;AACAd,IAAAA,aAAa,CAAC;AAACb,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAb;AACD,GAHD;;AAKA,QAAM4B,uBAAuB,GAAG,MAAM;AACpCb,IAAAA,WAAW,CAAC;AAACf,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAX,CADoC,CAEpC;AACD,GAHD;;AAKA,QAAM6B,aAAa,GAAIL,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACM,cAAN;AACArB,IAAAA,KAAK,CAACsB,OAAN,CAAcnB,UAAU,CAACX,KAAzB,EAA+Ba,aAAa,CAACb,KAA7C;AACD,GAHD;;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEP,OAAO,CAACsC,KAAzB;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEH,aAAhB;AAAA,8BACE,QAAC,KAAD;AACA,QAAA,EAAE,EAAC,OADH;AAEA,QAAA,KAAK,EAAC,QAFN;AAGA,QAAA,IAAI,EAAC,OAHL;AAIA,QAAA,OAAO,EAAEb,YAJT;AAKA,QAAA,KAAK,EAAEJ,UAAU,CAACX,KALlB;AAMA,QAAA,QAAQ,EAAEsB,kBANV;AAOA,QAAA,MAAM,EAAEI;AAPR;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,KAAD;AACA,QAAA,EAAE,EAAC,UADH;AAEA,QAAA,KAAK,EAAC,UAFN;AAGA,QAAA,IAAI,EAAC,UAHL;AAIA,QAAA,OAAO,EAAEV,eAJT;AAKA,QAAA,KAAK,EAAEH,aAAa,CAACb,KALrB;AAMA,QAAA,QAAQ,EAAEyB,qBANV;AAOA,QAAA,MAAM,EAAEE;AAPR;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE;AAAK,QAAA,SAAS,EAAElC,OAAO,CAACuC,OAAxB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAEvC,OAAO,CAACwC,GAAzC;AAA8C,UAAA,QAAQ,EAAE,CAACxB,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA1GD;;GAAMF,K;;KAAAA,K;AA4GN,eAAeA,KAAf","sourcesContent":["import React, { useState , useEffect , useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input';\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT'){\n    return { value: action.val,isValid: action.val.includes('@')};\n\n  }\n  if (action.type === 'INPUT_BLUR'){\n    return { value: state.value,isValid: state.value.includes('@')};\n  }\n  return {value: '',isValid:false};\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT'){\n    return { value: action.val,isValid: action.val.trim().length > 6};\n\n  }\n  if (action.type === 'INPUT_BLUR'){\n    return { value: state.value,isValid: state.value.trim().length > 6};\n  }\n  return {value: '',isValid:false};\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null,\n  });\n  const [passwordState, dispatchPwd] = useReducer(passwordReducer,{\n    value: '',\n    isValid:null,\n\n  });\n\n  const { isValid: emailIsValid} = emailState;\n  const {isValid: passwordIsValid} = passwordState;\n\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n\n    return () => {\n      console.log('EFFECT CLEANUP');\n    }\n  }, []);\n\n  useEffect(()=>{\n    const identfier = setTimeout(() => {\n    console.log('Checking form Validity!');\n    \n  setFormIsValid(\n    emailState.isValid && passwordState.isValid\n  );\n}, 500);\nreturn () => {\n  console.log('CLEANUP!');\n  clearTimeout(identfier);\n};\n}, [ emailState, passwordState]);\n  \n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT', val:event.target.value});\n    // setEnteredEmail(event.target.value);\n\n  //   setFormIsValid(\n  //     event.target.value.includes('@') > 6 && emailState.isValid);\n    \n  };\n\n   \n  \n\n  const passwordChangeHandler = (event) => {\n    dispatchPwd({type: 'USER_INPUT', val:event.target.value});\n\n  //   setFormIsValid(\n  //     emailState.value.trim().length > 6 && passwordState.isValid);\n    \n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({type: 'INPUT_BLUR'});\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPwd({type: 'INPUT_BLUR'});\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value,passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input \n        id=\"email\" \n        label=\"E-mail\" \n        type=\"email\" \n        isValid={emailIsValid}  \n        value={emailState.value}\n        onChange={emailChangeHandler}\n        onBlue={validateEmailHandler}\n        />\n        <Input \n        id=\"password\" \n        label=\"Password\" \n        type=\"password\" \n        isValid={passwordIsValid}  \n        value={passwordState.value}\n        onChange={passwordChangeHandler}\n        onBlue={validatePasswordHandler}\n        />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}